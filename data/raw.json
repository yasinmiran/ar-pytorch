{"torch.utils.checkpoint.CheckpointFunction": {"classes": ["RuntimeError"], "functions": ["forward", "check_backward_validity", "_get_autocast_kwargs", "run_function", "backward", "isinstance", "range", "tuple", "enumerate", "set_device_states", "RuntimeError", "get_device_states", "detach_variable", "len", "list"], "constants": [], "modules": [], "extends": ["Function"], "imports": ["warnings", "torch", "typing", "weakref"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/weakref.py"], "meta": {"object_name": "CheckpointFunction", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/utils/checkpoint.py", "module_name": "torch.utils.checkpoint"}}, "torch.autograd.function._SingleLevelFunction": {"classes": ["Any", "Tuple", "NotImplementedError", "FunctionCtx", "FunctionMeta"], "functions": ["forward", "setup_context", "backward", "NotImplementedError", "jvp"], "constants": ["_C"], "modules": [], "extends": ["_FunctionBase", "FunctionCtx", "_HookMixin", "FunctionMeta"], "imports": ["functools", "torch._C", "torch._functorch.autograd_function", "warnings", "torch._functorch", "torch", "torch.utils.hooks", "collections", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/functools.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/_C.cpython-39-darwin.so", null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/_functorch/__init__.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/utils/hooks.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "_SingleLevelFunction", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/autograd/function.py", "module_name": "torch.autograd.function"}}, "torch.autograd.function.Function": {"classes": ["RuntimeError", "DeprecationWarning", "NotImplementedError"], "functions": ["super", "NotImplementedError", "RuntimeError", "custom_function_call", "vmap", "apply"], "constants": [], "modules": [], "extends": ["_SingleLevelFunction"], "imports": ["functools", "torch._C", "torch._functorch.autograd_function", "warnings", "torch._functorch", "torch", "torch.utils.hooks", "collections", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/functools.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/_C.cpython-39-darwin.so", null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/_functorch/__init__.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/utils/hooks.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "Function", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/autograd/function.py", "module_name": "torch.autograd.function"}}, "torch.nn.modules.activation.ReLU": {"classes": ["F", "Module", "Tensor"], "functions": ["forward", "extra_repr", "super"], "constants": [], "modules": [], "extends": ["Module"], "imports": ["linear", "torch.nn.init", null, "module", "warnings", "torch.nn.parameter", "torch", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "ReLU", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/activation.py", "module_name": "torch.nn.modules.activation"}}, "torch.nn.modules.activation.Threshold": {"classes": ["F", "Module", "Tensor"], "functions": ["forward", "extra_repr", "super"], "constants": [], "modules": [], "extends": ["Module"], "imports": ["linear", "torch.nn.init", null, "module", "warnings", "torch.nn.parameter", "torch", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "Threshold", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/activation.py", "module_name": "torch.nn.modules.activation"}}, "torch.nn.modules.conv._ConvNd": {"classes": ["ValueError", "List", "Tensor", "Tuple", "Optional", "Union", "Module", "Parameter"], "functions": ["range", "ValueError", "Parameter", "hasattr", "isinstance", "super", "zip", "extra_repr", "_reverse_repeat_tuple", "reset_parameters", "len", "any", "_conv_forward"], "constants": [], "modules": [], "extends": ["Module"], "imports": [null, "math", "module", "torch._torch_docs", "common_types", "warnings", "torch.nn.parameter", "lazy", "torch", "utils", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", null, null], "meta": {"object_name": "_ConvNd", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/conv.py", "module_name": "torch.nn.modules.conv"}}, "torch.nn.modules.conv.Conv1d": {"classes": ["F", "Union", "Optional", "Tensor"], "functions": ["forward", "_single", "isinstance", "super", "_conv_forward"], "constants": [], "modules": [], "extends": ["_ConvNd"], "imports": [null, "math", "module", "torch._torch_docs", "common_types", "warnings", "torch.nn.parameter", "lazy", "torch", "utils", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", null, null], "meta": {"object_name": "Conv1d", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/conv.py", "module_name": "torch.nn.modules.conv"}}, "torch.nn.modules.conv.Conv2d": {"classes": ["F", "Union", "Optional", "Tensor"], "functions": ["forward", "isinstance", "super", "_pair", "_conv_forward"], "constants": [], "modules": [], "extends": ["_ConvNd"], "imports": [null, "math", "module", "torch._torch_docs", "common_types", "warnings", "torch.nn.parameter", "lazy", "torch", "utils", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", null, null], "meta": {"object_name": "Conv2d", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/conv.py", "module_name": "torch.nn.modules.conv"}}, "torch.nn.modules.conv.Conv3d": {"classes": ["F", "Union", "Optional", "Tensor"], "functions": ["forward", "isinstance", "super", "_triple", "_conv_forward"], "constants": [], "modules": [], "extends": ["_ConvNd"], "imports": [null, "math", "module", "torch._torch_docs", "common_types", "warnings", "torch.nn.parameter", "lazy", "torch", "utils", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", null, null], "meta": {"object_name": "Conv3d", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/conv.py", "module_name": "torch.nn.modules.conv"}}, "torch.nn.functional.relu": {"classes": ["relu_", "relu"], "functions": ["relu_", "handle_torch_function", "relu", "has_torch_function_unary"], "constants": [false, "relu(input, inplace=False) -> Tensor\\n\\n    Applies the rectified linear unit function element-wise. See\\n    :class:`~torch.nn.ReLU` for more details.\\n    "], "modules": [], "extends": [], "imports": [null, "_jit_internal", "math", "torch._torch_docs", "torch._C", "warnings", "modules.utils", "torch.types", "modules", "torch", "overrides", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", null, null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "relu", "object_type": "Function", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/functional.py", "module_name": "torch.nn.functional"}}, "torch.nn.functional.threshold": {"classes": [], "functions": [], "constants": [], "modules": [], "extends": [], "imports": [null, "_jit_internal", "math", "torch._torch_docs", "torch._C", "warnings", "modules.utils", "torch.types", "modules", "torch", "overrides", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", null, null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "threshold", "object_type": "Function", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/functional.py", "module_name": "torch.nn.functional"}}, "torch._tensor.Tensor": {"classes": ["TypeError", "Any", "ValueError", "Dict", "Tensor", "Tuple", "NotImplementedError", "OrderedDict", "Optional", "DLDeviceType", "RuntimeError", "Union", "Number", "AttributeError", "LU", "NotImplemented", "Resize"], "functions": ["TypeError", "iter", "deepcopy", "hasattr", "align_to", "solve", "rename", "to_sparse_coo", "symeig", "istft", "split", "setattr", "storage", "register_hook", "str", "unflatten", "handle_torch_function", "storage_type", "dir", "update_names", "resolve_ellipsis", "_update_names", "stft", "super", "get_default_nowrap_functions", "lu", "_handle_torch_function_and_wrap_type_error_to_not_implemented", "has_torch_function_variadic", "unique", "RuntimeError", "single_ellipsis_index", "unzip_namedshape", "sorted", "all", "_reduce_ex_internal", "_convert", "share_memory_", "resize", "issubclass", "ValueError", "isinstance", "NotImplementedError", "dict", "resize_as", "norm", "rename_", "AttributeError", "len", "trim", "refine_names", "check_serializing_named_tensor", "backward", "getattr", "is_shared", "lstsq", "OrderedDict", "int", "eig", "tuple", "type", "has_torch_function_unary", "_symeig", "reinforce", "id", "unique_consecutive", "is_ellipsis", "func", "_typed_storage", "list"], "constants": ["_C"], "modules": ["_linalg_utils", "torch.autograd._functions"], "extends": ["_TensorBase"], "imports": ["numbers", "torch.utils.dlpack", "functools", "enum", "torch._C", "copy", "warnings", "torch.overrides", "torch.utils.hooks", "collections", "torch", "_linalg_utils", "torch._namedtensor_internals", "copyreg", "torch.autograd._functions", "typing"], "refs": [null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/functools.py", null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/enum.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/_C.cpython-39-darwin.so", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/utils/hooks.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/copyreg.py"], "meta": {"object_name": "Tensor", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/_tensor.py", "module_name": "torch._tensor"}}, "torch.nn.modules.rnn.RNNBase": {"classes": ["ValueError", "List", "Tensor", "Tuple", "Optional", "RuntimeError", "Module", "Parameter"], "functions": ["get_expected_hidden_size", "hasattr", "_apply_permutation", "extra_repr", "setattr", "reset_parameters", "check_hidden_size", "_init_flat_weights", "check_input", "_weights_have_changed", "super", "all_weights", "RuntimeError", "_replicate_for_data_parallel", "ValueError", "bool", "check_forward_args", "isinstance", "permute_hidden", "float", "zip", "len", "range", "getattr", "int", "ref", "flatten_parameters", "_apply", "Parameter", "list"], "constants": [], "modules": ["torch.backends.cudnn.rnn"], "extends": ["Module"], "imports": ["utils.rnn", "numbers", null, "parameter", "math", "module", "weakref", "warnings", "torch", "torch.backends.cudnn.rnn", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/numbers.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/weakref.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/backends/cudnn/rnn.py"], "meta": {"object_name": "RNNBase", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/rnn.py", "module_name": "torch.nn.modules.rnn"}}, "torch.nn.modules.rnn.RNN": {"classes": ["ValueError", "Tensor", "Tuple", "RNNBase", "Optional", "RuntimeError", "PackedSequence"], "functions": ["forward", "ValueError", "isinstance", "super", "int", "RuntimeError", "PackedSequence"], "constants": ["_VF"], "modules": [], "extends": ["RNNBase"], "imports": ["utils.rnn", "numbers", null, "parameter", "math", "module", "weakref", "warnings", "torch", "torch.backends.cudnn.rnn", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/numbers.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/weakref.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/backends/cudnn/rnn.py"], "meta": {"object_name": "RNN", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/rnn.py", "module_name": "torch.nn.modules.rnn"}}, "torch.nn.modules.rnn.LSTM": {"classes": ["Tensor", "Tuple", "RNNBase", "Optional", "RuntimeError", "PackedSequence"], "functions": ["forward", "check_forward_args", "isinstance", "permute_hidden", "super", "int", "_apply_permutation", "RuntimeError", "get_expected_cell_size", "PackedSequence"], "constants": ["_VF"], "modules": [], "extends": ["RNNBase"], "imports": ["utils.rnn", "numbers", null, "parameter", "math", "module", "weakref", "warnings", "torch", "torch.backends.cudnn.rnn", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/numbers.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/weakref.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/backends/cudnn/rnn.py"], "meta": {"object_name": "LSTM", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/rnn.py", "module_name": "torch.nn.modules.rnn"}}, "torch.nn.modules.rnn.GRU": {"classes": ["ValueError", "Tensor", "Tuple", "RNNBase", "Optional", "RuntimeError", "PackedSequence"], "functions": ["forward", "ValueError", "isinstance", "super", "int", "RuntimeError", "PackedSequence"], "constants": ["_VF"], "modules": [], "extends": ["RNNBase"], "imports": ["utils.rnn", "numbers", null, "parameter", "math", "module", "weakref", "warnings", "torch", "torch.backends.cudnn.rnn", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/numbers.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/weakref.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/backends/cudnn/rnn.py"], "meta": {"object_name": "GRU", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/rnn.py", "module_name": "torch.nn.modules.rnn"}}, "torch.nn.modules.activation.Softmax": {"classes": ["F", "Module", "Tensor", "Optional"], "functions": ["forward", "extra_repr", "hasattr", "super"], "constants": [], "modules": [], "extends": ["Module"], "imports": ["linear", "torch.nn.init", null, "module", "warnings", "torch.nn.parameter", "torch", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "Softmax", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/activation.py", "module_name": "torch.nn.modules.activation"}}, "torch.nn.modules.activation.Softmin": {"classes": ["F", "Module", "Tensor", "Optional"], "functions": ["forward", "extra_repr", "hasattr", "super"], "constants": [], "modules": [], "extends": ["Module"], "imports": ["linear", "torch.nn.init", null, "module", "warnings", "torch.nn.parameter", "torch", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "Softmin", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/activation.py", "module_name": "torch.nn.modules.activation"}}, "torch.nn.modules.activation.MultiheadAttention": {"classes": ["F", "Tensor", "Tuple", "Optional", "Module", "AssertionError", "NonDynamicallyQuantizableLinear", "Parameter"], "functions": ["forward", "super", "any", "constant_", "_reset_parameters", "AssertionError", "merge_masks", "all", "xavier_normal_", "NonDynamicallyQuantizableLinear", "Parameter", "str", "xavier_uniform_"], "constants": [], "modules": [], "extends": ["Module"], "imports": ["linear", "torch.nn.init", null, "module", "warnings", "torch.nn.parameter", "torch", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "MultiheadAttention", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/activation.py", "module_name": "torch.nn.modules.activation"}}, "torch.nn.modules.transformer.TransformerEncoderLayer": {"classes": ["F", "Dropout", "Tensor", "Linear", "Optional", "Union", "Module", "MultiheadAttention", "Callable", "LayerNorm"], "functions": ["forward", "Dropout", "hasattr", "isinstance", "super", "any", "_sa_block", "Linear", "_get_activation_fn", "_ff_block", "MultiheadAttention", "all", "str", "LayerNorm"], "constants": [], "modules": [], "extends": ["Module"], "imports": ["linear", null, "container", "module", "activation", "init", "copy", "dropout", "normalization", "torch", "typing"], "refs": [null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/copy.py"], "meta": {"object_name": "TransformerEncoderLayer", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/transformer.py", "module_name": "torch.nn.modules.transformer"}}, "torch.nn.modules.transformer.TransformerDecoderLayer": {"classes": ["F", "Dropout", "Tensor", "Linear", "Optional", "Union", "Module", "MultiheadAttention", "Callable", "LayerNorm"], "functions": ["forward", "Dropout", "isinstance", "super", "_sa_block", "Linear", "_get_activation_fn", "_mha_block", "_ff_block", "MultiheadAttention", "LayerNorm"], "constants": [], "modules": [], "extends": ["Module"], "imports": ["linear", null, "container", "module", "activation", "init", "copy", "dropout", "normalization", "torch", "typing"], "refs": [null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py", "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/copy.py"], "meta": {"object_name": "TransformerDecoderLayer", "object_type": "Class", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/modules/transformer.py", "module_name": "torch.nn.modules.transformer"}}, "torch.nn.functional.softmax": {"classes": ["dim", "softmax"], "functions": ["dim", "_get_softmax_dim", "has_torch_function_unary", "softmax", "handle_torch_function"], "constants": [3, null, "Applies a softmax function.\\n\\n    Softmax is defined as:\\n\\n    :math:`\\\\text{Softmax}(x_{i}) = \\\\frac{\\\\exp(x_i)}{\\\\sum_j \\\\exp(x_j)}`\\n\\n    It is applied to all slices along dim, and will re-scale them so that the elements\\n    lie in the range `[0, 1]` and sum to 1.\\n\\n    See :class:`~torch.nn.Softmax` for more details.\\n\\n    Args:\\n        input (Tensor): input\\n        dim (int): A dimension along which softmax will be computed.\\n        dtype (:class:`torch.dtype`, optional): the desired data type of returned tensor.\\n          If specified, the input tensor is casted to :attr:`dtype` before the operation\\n          is performed. This is useful for preventing data type overflows. Default: None.\\n\\n    .. note::\\n        This function doesn't work directly with NLLLoss,\\n        which expects the Log to be computed between the Softmax and itself.\\n        Use log_softmax instead (it's faster and has better numerical properties).\\n\\n    ", "softmax"], "modules": [], "extends": [], "imports": [null, "_jit_internal", "math", "torch._torch_docs", "torch._C", "warnings", "modules.utils", "torch.types", "modules", "torch", "overrides", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", null, null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "softmax", "object_type": "Function", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/functional.py", "module_name": "torch.nn.functional"}}, "torch.nn.functional.softmin": {"classes": ["dim", "softmax"], "functions": ["dim", "_get_softmax_dim", "has_torch_function_unary", "softmax", "handle_torch_function"], "constants": ["Applies a softmin function.\\n\\n    Note that :math:`\\\\text{Softmin}(x) = \\\\text{Softmax}(-x)`. See softmax definition for mathematical formula.\\n\\n    See :class:`~torch.nn.Softmin` for more details.\\n\\n    Args:\\n        input (Tensor): input\\n        dim (int): A dimension along which softmin will be computed (so every slice\\n            along dim will sum to 1).\\n        dtype (:class:`torch.dtype`, optional): the desired data type of returned tensor.\\n          If specified, the input tensor is casted to :attr:`dtype` before the operation\\n          is performed. This is useful for preventing data type overflows. Default: None.\\n    ", 3, "softmin", null], "modules": [], "extends": [], "imports": [null, "_jit_internal", "math", "torch._torch_docs", "torch._C", "warnings", "modules.utils", "torch.types", "modules", "torch", "overrides", "typing"], "refs": ["/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload/math.cpython-39-darwin.so", null, null, "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/warnings.py", null, "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/__init__.py"], "meta": {"object_name": "softmin", "object_type": "Function", "abs_file_path": "/Users/yasin/PycharmProjects/ar-pytorch/venv/lib/python3.9/site-packages/torch/nn/functional.py", "module_name": "torch.nn.functional"}}}